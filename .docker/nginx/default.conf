# map $sent_http_content_type $expires {
#     "text/html"                 epoch;
#     "text/html; charset=utf-8"  epoch;
#     default                     off;
# }

# server {
#     listen          80;             # the port nginx is listening on
#     server_name     localhost;    # setup your domain here

#     gzip            on;
#     gzip_types      text/plain application/xml text/css application/javascript;
#     gzip_min_length 1000;

#     location / {
#         expires $expires;

#         proxy_redirect                      off;
#         proxy_set_header Host               $host;
#         proxy_set_header X-Real-IP          $remote_addr;
#         proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto  $scheme;
#         proxy_read_timeout          1m;
#         proxy_connect_timeout       1m;
#         proxy_pass                         http://node; # set the address of the Node.js instance here
#     }
# }

# upstream node {
#    server node:3000;
# }

user nginx;
worker_processes 1;

error_log /dev/stderr notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                     '$status $body_bytes_sent "$http_referer" '
                     '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout main;

    sendfile on;
    #tcp_nopush on;

    keepalive_timeout 65;

    #gzip on;

    # Map upgrade variable based on connection
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Include user site configurations
    include /etc/nginx/sites-enabled/*;
}